spring.datasource.url=jdbc:mysql://localhost:3307/order_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=CTT&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


# mybatis配置
mybatis.type-aliases-package=io.github.jesse0722.speedkill.module
mybatis.configuration.map-underscore-to-camel-case=true
# 延迟加载
mybatis.configuration.lazy-loading-enabled=true
mybatis.mapper-locations=classpath:mapper/*.xml

spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=123456

# 配置真实数据源
spring.shardingsphere.datasource.names=demo_ds_0,demo_ds_1

# 配置第 1 个数据源
spring.shardingsphere.datasource.demo_ds_0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.demo_ds_0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.demo_ds_0.url=jdbc:mysql://localhost:3311/demo_ds_0
spring.shardingsphere.datasource.demo_ds_0.username=root
spring.shardingsphere.datasource.demo_ds_0.password=root

# 配置第 2 个数据源
spring.shardingsphere.datasource.demo_ds_1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.demo_ds_1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.demo_ds_1.url=jdbc:mysql://localhost:3312/demo_ds_1
spring.shardingsphere.datasource.demo_ds_1.username=root
spring.shardingsphere.datasource.demo_ds_1.password=root


spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=demo_ds_$->{0..1}.t_order$->{0..1}

# 配置分库策略
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database-inline

# 配置分表策略
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table-inline

# 省略配置 t_order_item 表规则...
# ...

# 配置 分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=demo_ds_${user_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=t_order_${order_id % 2}
